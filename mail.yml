---
- name: mail server setup
  hosts: all
  remote_user: root
  vars:
    solr_path: http://archive.apache.org/dist/lucene/solr/
    solr_version: 8.11.1
    solr_destination: /opt/solr/server/
    solr_file: "solr-{{ solr_version }}"
    solr_url: "{{ solr_path }}{{ solr_version }}/solr-{{ solr_version }}.tgz"
    solr_example_path: "/opt/solr-{{ solr_version }}/example"
    roundcube_version: 1.5.3
    roundcube_url: "https://github.com/roundcube/roundcubemail/releases/download/{{ roundcube_version }}/roundcubemail-{{ roundcube_version }}-complete.tar.gz"
    firewall_services:
      - http
      - https
      - imap
      - imaps
      - smtp
      - smtps
    mail_services:
      - postfix
      - dovecot
      - opendkim
      - httpd
      - spamassassin
    mail_packages:
      - dovecot
      - httpd
      - mod_ssl
      - opendkim
      - certbot
      - php
      - php-cli
      - borgbackup
      - rsync
      - backupninja
      - fail2ban
      - postfix
      - java-latest-openjdk
      - procmail
      - spamassassin
      - php-mbstring
      - php-gd
      - php-json
      - php-xml
      - php-pdo
      - php-mysqlnd
    postfix_maps:
      - sasl_passwd
      - relayhost_map
      - access
      - sender_access

  tasks:
  - name: Install packages
    yum:
      name: "{{ mail_packages }}"
      state: present
    ignore_errors: true

  - name: create mail users
    user:
      name: "{{ item }}"
      state: present
    loop: "{{ mail_users }}"

  - name: remove stock letsencrypt dir
    file:
      path: /etc/letsencrypt
      state: absent

  - name: copy letsencrypt
    synchronize:
      src: /etc/letsencrypt
      dest: /etc

  - name: httpd config
    template:
      src: httpd.jina2
      dest: /etc/httpd/conf.d/mail.conf

  - name: pull down roundcubemail
    unarchive:
      src: "{{ roundcube_url }}"
      dest: /var/www/html
      remote_src: yes

  - name: set roundcubemail permissions
    file:
      path: /var/www/html/roundcubemail
      owner: apache
      recurse: yes

  - name: symlink roundcube to /var/www/html/roundcubemail
    file:
      src: "/var/www/html/roundcubemail-{{ roundcube_version }}"
      dest: /var/www/html/roundcubemail
      state: link

# might not need this anymore
#  - name: dovecot-lda setuid
#    file:
#      path: /usr/libexec/dovecot/dovecot-lda
#      mode: '4750'

  - name: dovecot 10-mail.conf
    copy:
      src: 10-mail.conf
      dest: /etc/dovecot/conf.d/10-mail.conf

  - name: dovecot 90-plugin.conf
    copy:
      src: 90-plugin.conf
      dest: /etc/dovecot/conf.d/90-plugin.conf

  - name: opendkim.conf
    copy:
      src: opendkim.conf
      dest: /etc/opendkim.conf

  - name: opendkim key directories
    file:
      state: directory
      path: "/etc/opendkim/keys/{{ item }}"
    loop: "{{ mail_domains }}"

  - name: opendkim TXT
    copy:
      src: "opendkim/{{ item }}.txt"
      dest: "/etc/opendkim/keys/{{ item }}/default.txt"
    loop: "{{ mail_domains }}"

  - name: opendkim keys
    copy:
      src: "opendkim/{{ item }}.private"
      dest: "/etc/opendkim/keys/{{ item }}/default.private"
    loop: "{{ mail_domains }}"

  - name: opendkim KeyTable
    template:
      src: "KeyTable.jinja2"
      dest: /etc/opendkim/KeyTable

  - name: opendkim SigningTable
    template:
      src: SigningTable.jinja2
      dest: /etc/opendkim/SigningTable

  - name: /etc/procmailrc
    copy:
      src: procmailrc
      dest: /etc/procmailrc

  - name: postfix main.cf
    template:
      src: main.cf.jinja2
      dest: /etc/postfix/main.cf

  - name: postfix auth maps
    copy:
      src: "{{ item }}"
      dest: "/etc/postfix/{{ item }}"
    loop: "{{ postfix_maps }}"

  - name: postfix run postmap
    command: postmap /etc/postfix/"{{ item }}"
    loop: "{{ postfix_maps }}"

  - name: get solr
    get_url: url={{ solr_url }} dest=/tmp

  - name: extract the solr installation tgz
    unarchive:
      src: "/tmp/{{ solr_file }}.tgz"
      remote_src: yes
      dest: /opt
    ignore_errors: true
  
  - name: install Solr as a service..
    command: "/opt/{{ solr_file }}/bin/install_solr_service.sh /tmp/{{ solr_file }}.tgz -u solr -s solr -p 8983 -f" 


  - name: solr - enable dovecot
    command: /opt/solr/bin/solr create -c dovecot
    become: yes
    become_user: solr
    args:
      creates: /var/solr/data/dovecot

  - name: solr - copy managed-schema
    copy:
      src: solr-schema.xml
      dest: /var/solr/data/dovecot/conf/managed-schema
      owner: solr

  - name: solr - copy solrconfig.xml
    copy:
      src: solr-config.xml
      dest: /var/solr/data/dovecot/conf/solrconfig.xml
      owner: solr

  - name: solr - ensure schema.xml is absent
    file:
      path: /var/solr/data/dovecot/conf/schema.xml
      state: absent

  - name: restart services
    systemd:
      name: "{{ item }}"
      state: restarted
      enabled: true
    loop: "{{ mail_services }}"

  - name: restart solr like an animal
    command: /etc/init.d/solr restart

  - name: Create home dirs
    file:
      path: "/home/{{ item }}"
      state: directory
      owner: "{{ item }}"
      group: root
      mode: '0757'
    loop: "{{ mail_users }}"

  - name: Create vmail user
    user:
      name: vmail
      state: present

  - name: Create vmail group
    group:
      name: vmail
      state: present

  - name: Create Maildirs
    file:
      path: "/home/{{ item }}/Maildir"
      owner: "{{ item }}"
      group: vmail
      mode: '0757'
      state: directory
    loop: "{{ mail_users }}"

  - name: firewall-cmd allow services
    command: "firewall-cmd --zone=public --permanent --add-service={{ item }}"
    loop: "{{ firewall_services }}"

  - name: firewall-cmd reload
    command: firewall-cmd --reload
